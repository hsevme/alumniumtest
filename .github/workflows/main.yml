name: ðŸš¦ Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
  ALUMNIUM_MODEL: ${{ vars.ALUMNIUM_MODEL }}

jobs:
  test:
    name: Run Tests
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: execute

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          echo  "ALUMNIUM MODEL: "$ALUMNIUM_MODEL
          sudo apt update
          sudo apt install -y ffmpeg curl unzip xvfb
          pip install --upgrade pip
          pip install -r requirements.txt
          playwright install --with-deps

      - name: Start Virtual Display
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Remove results directory
        run: rm -rf allure-results

      - name: Run Behave Tests with Allure
        run: |
          behave -f allure_behave.formatter:AllureFormatter -o allure-results

      - name: Check dir
        if: always()
        run: ls -als

      - name: Upload Playwright Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: artifacts

      - name: Generate Allure Report
        if: always()
        run: |
          sleep 1m
          mv allure-report/history allure-results/history
          rm -rf allure-report
          npm install -g allure-commandline --save-dev
          allure generate allure-results -o allure-report
          
      - name: Upload Allure Report as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Git pull
        if: always()
        run: git pull

      - uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
        if: always()
        with:
          author_name: cache-bot
          author_email: cache-bot@mailprovid.er
          message: 'Update alumnium cache and allure report'
          push: true
          new_branch: execute

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
          keep_files: false