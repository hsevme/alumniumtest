name: 🚦 Run Tests and Generate Allure Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.restore_cache.outputs.cache-hit }}

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y ffmpeg curl unzip xvfb
          pip install --upgrade pip
          pip install -r requirements.txt
          playwright install --with-deps

      - name: 🖥️ Start Virtual Display
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: ♻️ Restore SQLite Cache
        id: restore_cache
        uses: actions/cache@v4
        with:
          path: .alumnium-cache.sqlite
          key: sqlite-cache-${{ runner.os }}
          restore-keys: sqlite-cache-

      - name: 🚀 Run Behave Tests with Allure
        run: |
          behave -f allure_behave.formatter:AllureFormatter -o allure-results

      - name: 💾 Save SQLite Cache
        uses: actions/cache@v4
        with:
          path: .alumnium-cache.sqlite
          key: sqlite-cache-${{ runner.os }}-${{ github.run_id }}

      - name: 📂 Upload Playwright Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: artifacts

      - name: 📦 Upload Raw Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

  report:
    name: 🧾 Generate Allure Report
    runs-on: ubuntu-latest
    needs: test
    if: always()  # Run even if tests fail

  deploy:
    name: 🌐 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: report
    if: github.ref == 'refs/heads/main' && always()  # Run regardless of upstream result
